version: '3'

services:
  zookeeper:
    build:
      context: ./kafka/zookeeper_build
      dockerfile: Dockerfile
    image: zookeeper_clean
    container_name: zookeeper
    networks:
      - tap
    ports:
      - "2181:2181"
  k-init:
    build:
      context: ./kafka/kafka_init/
      dockerfile: Dockerfile
    image: kafka_init
    container_name: k-init
    networks:
      - tap
    ports:
      - "9091:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: k-financial
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  k-financial:
    build:
      context: ./kafka/kafka_build
      dockerfile: Dockerfile
    image: kafka_clean
    container_name: k-financial
    networks:
      - tap
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: k-financial
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  k-health:
    build:
      context: ./kafka/kafka_build
      dockerfile: Dockerfile
    image: kafka_clean
    container_name: k-health
    networks:
      - tap
    ports:
      - "9093:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: k-health
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  k-cgoods:
    build:
      context: ./kafka/kafka_build
      dockerfile: Dockerfile
    image: kafka_clean
    container_name: k-cgoods
    networks:
      - tap
    ports:
      - "9094:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: k-cgoods
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  k-tech:
    build:
      context: ./kafka/kafka_build
      dockerfile: Dockerfile
    image: kafka_clean
    container_name: k-tech
    networks:
      - tap
    ports:
      - "9095:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: k-tech
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  k-industrial:
    build:
      context: ./kafka/kafka_build
      dockerfile: Dockerfile
    image: kafka_clean
    container_name: k-industrial
    networks:
      - tap
    ports:
      - "9096:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: k-industrial
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  k-energy:
    build:
      context: ./kafka/kafka_build
      dockerfile: Dockerfile
    image: kafka_clean
    container_name: k-energy
    networks:
      - tap
    ports:
      - "9097:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: k-energy
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  zoonavigator:
    image: elkozmon/zoonavigator
    container_name: zoonavigator
    networks:
      - tap
    ports:
      - "9000:9000"
    environment:
      HTTP_PORT: 9000
  fluentd:
    build:
      context: ./Fluentd/
      dockerfile: Dockerfile
    container_name: fluentd
    networks:
      - tap
    user: root
    image: fluentkafka
    volumes:
      - ./kafka/data/newraw/:/fluentd/log/files/
      - ./kafka/conf:/fluentd/etc/
      - ./kafka/output:/output/
  producer:
    build:
      context: ./L1/
      dockerfile: Dockerfile
    container_name: producer
    networks:
      - tap
    user: root
    image: producer
    volumes:
      - ./kafka/data/newraw/:/data/raw
      - ./L1/app:/app
    command: [ php, streaming_extract.php ]
  spark:
    build:
      context: ./Spark/
      dockerfile: Dockerfile
    container_name: spark_process
    networks:
      - tap
    image: spark_withkafka
    volumes:
      - ./Spark/app:/app
      - ../models:/models
      - ./Spark/indexes:/indexes
  es_cgoods:
    container_name: es_cgoods
    environment:
      - "node.name=es_cgoods"
      #- "bootstrap.memory_lock=true"
      - "cluster.name=es-cluster"
      - "discovery.seed_hosts=es_cgoods" #,es_energy,es_financial,es_health,es_industrial,es_tech"
      - "cluster.initial_master_nodes=es_cgoods" #,es_energy,es_financial,es_health,es_industrial,es_tech"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"

    networks:
      - tap
    ports:
      - "9200:9200"
      - "9300:9300"
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
  es_energy:
    container_name: es_energy
    environment:
      - "node.name=es_energy"
      #- "bootstrap.memory_lock=true"
      - "cluster.name=es-cluster"
      - "discovery.seed_hosts=es_cgoods,es_energy,es_financial,es_health,es_industrial,es_tech"
      - "cluster.initial_master_nodes=es_cgoods,es_energy,es_financial,es_health,es_industrial,es_tech"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    networks:
      - tap
    ports:
      - "9201:9200"
      - "9301:9300"
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
  es_financial:
    container_name: es_financial
    environment:
      - "node.name=es_financial"
      #- "bootstrap.memory_lock=true"
      - "cluster.name=es-cluster"
      - "discovery.seed_hosts=es_cgoods,es_energy,es_financial,es_health,es_industrial,es_tech"
      - "cluster.initial_master_nodes=es_cgoods,es_energy,es_financial,es_health,es_industrial,es_tech"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    networks:
      - tap
    ports:
      - "9202:9200"
      - "9302:9300"
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
  es_health:
    container_name: es_health
    environment:
      - "node.name=es_health"
      #- "bootstrap.memory_lock=true"
      - "cluster.name=es-cluster"
      - "discovery.seed_hosts=es_cgoods,es_energy,es_financial,es_health,es_industrial,es_tech"
      - "cluster.initial_master_nodes=es_cgoods,es_energy,es_financial,es_health,es_industrial,es_tech"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    networks:
      - tap
    ports:
      - "9203:9200"
      - "9303:9300"
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
  es_industrial:
    container_name: es_industrial
    environment:
      - "node.name=es_industrial"
      #- "bootstrap.memory_lock=true"
      - "cluster.name=es-cluster"
      - "discovery.seed_hosts=es_cgoods,es_energy,es_financial,es_health,es_industrial,es_tech"
      - "cluster.initial_master_nodes=es_cgoods,es_energy,es_financial,es_health,es_industrial,es_tech"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    networks:
      - tap
    ports:
      - "9204:9200"
      - "9304:9300"
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
  es_tech:
    container_name: es_tech
    environment:
      - "node.name=es_tech"
      #- "bootstrap.memory_lock=true"
      - "cluster.name=es-cluster"
      - "discovery.seed_hosts=es_cgoods,es_energy,es_financial,es_health,es_industrial,es_tech"
      - "cluster.initial_master_nodes=es_cgoods,es_energy,es_financial,es_health,es_industrial,es_tech"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    networks:
      - tap
    ports:
      - "9205:9200"
      - "9305:9300"
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    networks:
      - tap
    ports:
      - "5601:5601"
    environment:
      - 'ELASTICSEARCH_HOSTS=["http://es_cgoods:9200","http://es_energy:9200","http://es_financial:9200","http://es_health:9200","http://es_industrial:9200","http://es_tech:9200"]'

   
networks:
  tap:
    driver: bridge
