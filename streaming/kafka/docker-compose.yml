version: '3'

services:
  zookeeper:
    image: zookeeper_clean
    container_name: zookeeper
    networks:
      - tap
    ports:
      - "2181:2181"
  k-init:
    image: kafka_init
    container_name: k-init
    networks:
      - tap
    ports:
      - "9091:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: k-init
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  k-tech:
    image: kafka_clean
    container_name: k-tech
    networks:
      - tap
    ports:
      - "9095:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: k-tech
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  k-financial:
    image: kafka_clean
    container_name: k-financial
    networks:
      - tap
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: k-financial
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  k-health:
    image: kafka_clean
    container_name: k-health
    networks:
      - tap
    ports:
      - "9093:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: k-health
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  k-cgoods:
    image: kafka_clean
    container_name: k-cgoods
    networks:
      - tap
    ports:
      - "9094:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: k-cgoods
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  k-industrial:
    image: kafka_clean
    container_name: k-industrial
    networks:
      - tap
    ports:
      - "9096:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: k-industrial
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  k-energy:
    image: kafka_clean
    container_name: k-energy
    networks:
      - tap
    ports:
      - "9097:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: k-energy
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  zoonavigator:
    image: elkozmon/zoonavigator
    container_name: zoonavigator
    networks:
      - tap
    ports:
      - "9000:9000"
    environment:
      HTTP_PORT: 9000
  fluentd:
    container_name: fluentd
    networks:
      - tap
    user: root
    build:
      context: .
    image: fluentkafka
    volumes:
      - ./data/newraw/:/fluentd/log/files/
      - ./conf:/fluentd/etc/
      - ./output:/output/
  producer:
    container_name: producer
    networks:
      - tap
    user: root
    image: producer
    volumes:
      - ./data/newraw/:/data/raw
    command: [ php, batch_extract.php ]
  spark:
    container_name: spark_process
    networks:
      - tap
    image: spark_process
    volumes:
      - ../Spark/:/app
   
networks:
  tap:
    driver: bridge
